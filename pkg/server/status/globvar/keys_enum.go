// Code generated by go-enum DO NOT EDIT.
// Version:
// Revision:
// Build Date:
// Built By:

package globvar

// import (
// 	"fmt"
// 	"strings"
// )

// const (
// 	// KeyBearerTokenExpirationTime is a Key of type BearerToken/ExpirationTime.
// 	KeyBearerTokenExpirationTime Key = iota
// 	// KeyClientSessionSignatureSecret is a Key of type ClientSession/SignatureSecret.
// 	KeyClientSessionSignatureSecret
// 	// KeyClientSessionExpirationTime is a Key of type ClientSession/ExpirationTime.
// 	KeyClientSessionExpirationTime
// 	// KeyClientConfigServiceValidityPeriod is a Key of type ClientConfig/ServiceValidityPeriod.
// 	KeyClientConfigServiceValidityPeriod
// )

// var ErrInvalidKey = fmt.Errorf("not a valid Key, try [%s]", strings.Join(_KeyNames, ", "))

// const _KeyName = "BearerToken/ExpirationTimeClientSession/SignatureSecretClientSession/ExpirationTimeClientConfig/ServiceValidityPeriod"

// var _KeyNames = []string{
// 	_KeyName[0:26],
// 	_KeyName[26:55],
// 	_KeyName[55:83],
// 	_KeyName[83:117],
// }

// // KeyNames returns a list of possible string values of Key.
// func KeyNames() []string {
// 	tmp := make([]string, len(_KeyNames))
// 	copy(tmp, _KeyNames)
// 	return tmp
// }

// var _KeyMap = map[Key]string{
// 	KeyBearerTokenExpirationTime:         _KeyName[0:26],
// 	KeyClientSessionSignatureSecret:      _KeyName[26:55],
// 	KeyClientSessionExpirationTime:       _KeyName[55:83],
// 	KeyClientConfigServiceValidityPeriod: _KeyName[83:117],
// }

// // String implements the Stringer interface.
// func (x Key) String() string {
// 	if str, ok := _KeyMap[x]; ok {
// 		return str
// 	}
// 	return fmt.Sprintf("Key(%d)", x)
// }

// var _KeyValue = map[string]Key{
// 	_KeyName[0:26]:                    KeyBearerTokenExpirationTime,
// 	strings.ToLower(_KeyName[0:26]):   KeyBearerTokenExpirationTime,
// 	_KeyName[26:55]:                   KeyClientSessionSignatureSecret,
// 	strings.ToLower(_KeyName[26:55]):  KeyClientSessionSignatureSecret,
// 	_KeyName[55:83]:                   KeyClientSessionExpirationTime,
// 	strings.ToLower(_KeyName[55:83]):  KeyClientSessionExpirationTime,
// 	_KeyName[83:117]:                  KeyClientConfigServiceValidityPeriod,
// 	strings.ToLower(_KeyName[83:117]): KeyClientConfigServiceValidityPeriod,
// }

// // ParseKey attempts to convert a string to a Key.
// func ParseKey(name string) (Key, error) {
// 	if x, ok := _KeyValue[name]; ok {
// 		return x, nil
// 	}
// 	// Case insensitive parse, do a separate lookup to prevent unnecessary cost of lowercasing a string if we don't need to.
// 	if x, ok := _KeyValue[strings.ToLower(name)]; ok {
// 		return x, nil
// 	}
// 	return Key(0), fmt.Errorf("%s is %w", name, ErrInvalidKey)
// }
